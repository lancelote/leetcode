import pytest

from src.check_if_move_is_legal import Solution


@pytest.mark.parametrize(
    "board,r,c,color,valid",
    [
        (
            [
                [".", ".", ".", "B", ".", ".", ".", "."],
                [".", ".", ".", "W", ".", ".", ".", "."],
                [".", ".", ".", "W", ".", ".", ".", "."],
                [".", ".", ".", "W", ".", ".", ".", "."],
                ["W", "B", "B", ".", "W", "W", "W", "B"],
                [".", ".", ".", "B", ".", ".", ".", "."],
                [".", ".", ".", "B", ".", ".", ".", "."],
                [".", ".", ".", "W", ".", ".", ".", "."],
            ],
            4,
            3,
            "B",
            True,
        ),
        (
            [
                [".", ".", ".", ".", ".", ".", ".", "."],
                [".", "B", ".", ".", "W", ".", ".", "."],
                [".", ".", "W", ".", ".", ".", ".", "."],
                [".", ".", ".", "W", "B", ".", ".", "."],
                [".", ".", ".", ".", ".", ".", ".", "."],
                [".", ".", ".", ".", "B", "W", ".", "."],
                [".", ".", ".", ".", ".", ".", "W", "."],
                [".", ".", ".", ".", ".", ".", ".", "B"],
            ],
            4,
            4,
            "W",
            False,
        ),
    ],
)
def test_solution(board, r, c, color, valid):
    assert Solution().checkMove(board, r, c, color) == valid
